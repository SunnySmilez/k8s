apiVersion: v1
kind: ReplicationController
metadata:
  name: test-rc
  labels:
    app: test-app
    version: v1
  annotations:
    name: String
spec:
  replicas: 2
  selector:
    app: test-app-pod
    name: test-pod
  template: #定义pod
    metadata:
      labels:
        app: test-app-pod
        version: test-pod-v1
        name: test-pod
    spec:
      restartPolicy: Always
      #nodeSelector:
      #  zone: minikube
      containers:
      - name: web02-pod
        image: sunnysmilez/php
        imagePullPolicy: Never      #三个选择Always、Never、IfNotPresent，每次启动时检查和更新（从registery）images的策略，
                                        # Always，每次都检查
                                        # Never，每次都不检查（不管本地是否有）
                                        # IfNotPresent，如果本地有就不检查，如果没有就拉取
        command: ['sh'] #启动容器的运行命令，将覆盖容器中的Entrypoint,对应Dockefile中的ENTRYPOINT
        args: ["$(str)"] #启动容器的命令参数，对应Dockerfile中CMD参数
        env: #指定容器中的环境变量
        - name: str #变量的名字
          value: "/etc/run.sh" #变量的值
        resources: #资源管理
          requests: #容器运行时，最低资源需求，也就是说最少需要多少资源容器才能正常运行
            cpu: 0.1 #CPU资源（核数），两种方式，浮点数或者是整数+m，0.1=100m，最少值为0.001核（1m）
            memory: 32Mi #内存使用量
          limits: #资源限制
            cpu: 0.5
            memory: 32Mi

        ports:
        - containerPort: 80 #容器开发对外的端口
          name: httpd  #名称
          protocol: TCP
        livenessProbe: #pod内容器健康检查的设置
          httpGet: #通过httpget检查健康，返回200-399之间，则认为容器正常
            path: / #URI地址
            port: 80
            scheme: HTTP
          initialDelaySeconds: 180 #表明第一次检测在容器启动后多长时间后开始
          timeoutSeconds: 5         #检测的超时时间
          periodSeconds: 15         #检查间隔时间
        lifecycle: #生命周期管理
          postStart:      #容器运行之前运行的任务
            exec:
              command:
                - 'sh'
                - 'echo "test">/tmp/1.txt'
          preStop:    #容器关闭之前运行的任务
            exec:
              command: ['service httpd stop']
        volumeMounts:
        - name: volume
          mountPath: /data
          readOnly: true
      volumes:
      - name: volume
        hostPath:
          path: /data   #挂载设备类型为hostPath，路径为宿主机下的data,这里设备类型支持很多种
